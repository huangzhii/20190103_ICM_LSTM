plot.title = element_text(size=14, face="bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.margin = unit(c(0.5,0.5,1,1), "cm")
# legend.position="none"
)
p
p <- ggplot(mat.melt, aes(x=Var1, y=value, fill = mycolor)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = NA) +
theme_gray() +
labs(title = my.title, x = "", y = my.ylabel) +
theme(axis.text.x = element_text(size=12, angle = 45, hjust = 1),
plot.title = element_text(size=14, face="bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.margin = unit(c(0.5,0.5,1,1), "cm")
# legend.position="none"
) +
scale_color_manual(labels = c("T999", "T888"))
p
p <- ggplot(mat.melt, aes(x=Var1, y=value, fill = mycolor)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = NA) +
theme_gray() +
labs(title = my.title, x = "", y = my.ylabel) +
theme(axis.text.x = element_text(size=12, angle = 45, hjust = 1),
plot.title = element_text(size=14, face="bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.margin = unit(c(0.5,0.5,1,1), "cm")
# legend.position="none"
) +
scale_color_manual(labels = c("T999", "T888", "T888", "T888", "T888", "T888", "T888", "T888", "T888", "T888", "T888"))
p
p <- ggplot(mat.melt, aes(x=Var1, y=value, fill = mycolor)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = NA) +
theme_gray() +
labs(title = my.title, x = "", y = my.ylabel) +
theme(axis.text.x = element_text(size=12, angle = 45, hjust = 1),
plot.title = element_text(size=14, face="bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.margin = unit(c(0.5,0.5,1,1), "cm")
# legend.position="none"
) +
scale_color_hue(labels = c("T999", "T888"))
p
ggplot(mat.melt, aes(x=Var1, y=value, fill = mycolor)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = NA) +
scale_color_hue(labels = c("T999", "T888"))
mycolor
p <- ggplot(mat.melt, aes(x=Var1, y=value, fill = mycolor)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = NA) +
theme_gray() +
labs(title = my.title, x = "", y = my.ylabel) +
theme(axis.text.x = element_text(size=12, angle = 45, hjust = 1),
plot.title = element_text(size=14, face="bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.margin = unit(c(0.5,0.5,1,1), "cm")
# legend.position="none"
) +
scale_colour_hue(name = "Model 1",
breaks=c("mb", "ma", "mc"),
labels=c("MBB", "MAA", "MCC"))
p
p <- ggplot(mat.melt, aes(x=Var1, y=value, fill = mycolor)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = NA) +
theme_gray() +
labs(title = my.title, x = "", y = my.ylabel) +
theme(axis.text.x = element_text(size=12, angle = 45, hjust = 1),
plot.title = element_text(size=14, face="bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.margin = unit(c(0.5,0.5,1,1), "cm")
# legend.position="none"
) +
scale_colour_hue(name = "Model 1",
breaks=c("mb", "ma", "mc", "ma", "mc", "ma", "mc", "ma", "mc", "ma", "mc"),
labels=c("MBB", "MAA", "MCC", "ma", "mc", "ma", "mc", "ma", "mc", "ma", "mc"))
p
p <- ggplot(mat.melt, aes(x=Var1, y=value, fill = mycolor)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = NA) +
theme_gray() +
labs(title = my.title, x = "", y = my.ylabel) +
theme(axis.text.x = element_text(size=12, angle = 45, hjust = 1),
plot.title = element_text(size=14, face="bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.margin = unit(c(0.5,0.5,1,1), "cm")
# legend.position="none"
) +
scale_colour_discrete(name = "Model 1",
breaks=c("mb", "ma", "mc", "ma", "mc", "ma", "mc", "ma", "mc", "ma", "mc"),
labels=c("MBB", "MAA", "MCC", "ma", "mc", "ma", "mc", "ma", "mc", "ma", "mc"))
p
p <- ggplot(mat.melt, aes(x=Var1, y=value, fill = mycolor)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = NA) +
theme_gray() +
labs(title = my.title, x = "", y = my.ylabel) +
theme(axis.text.x = element_text(size=12, angle = 45, hjust = 1),
plot.title = element_text(size=14, face="bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.margin = unit(c(0.5,0.5,1,1), "cm")
# legend.position="none"
) +
labs(color = 'Y series')
p
p <- ggplot(mat.melt, aes(x=Var1, y=value, fill = mycolor)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = NA) +
theme_gray() +
labs(title = my.title, x = "", y = my.ylabel) +
theme(axis.text.x = element_text(size=12, angle = 45, hjust = 1),
plot.title = element_text(size=14, face="bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.margin = unit(c(0.5,0.5,1,1), "cm")
# legend.position="none"
) +
scale_color_manual(name = "Model 1",
breaks=c("mb", "ma", "mc", "ma", "mc", "ma", "mc", "ma", "mc", "ma", "mc"),
labels=c("MBB", "MAA", "MCC", "ma", "mc", "ma", "mc", "ma", "mc", "ma", "mc"))
p
p <- ggplot(mat.melt, aes(x=Var1, y=value, fill = mycolor)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = NA) +
theme_gray() +
labs(title = my.title, x = "", y = my.ylabel) +
theme(axis.text.x = element_text(size=12, angle = 45, hjust = 1),
plot.title = element_text(size=14, face="bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.margin = unit(c(0.5,0.5,1,1), "cm")
# legend.position="none"
) +
scale_color_manual(name = "Model 1",
values=c("mb", "ma", "mc", "ma", "mc", "ma", "mc", "ma", "mc", "ma", "mc"),
labels=c("MBB", "MAA", "MCC", "ma", "mc", "ma", "mc", "ma", "mc", "ma", "mc"))
p
p <- ggplot(mat.melt, aes(x=Var1, y=value, fill = mycolor)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = NA) +
theme_gray() +
labs(title = my.title, x = "", y = my.ylabel) +
theme(axis.text.x = element_text(size=12, angle = 45, hjust = 1),
plot.title = element_text(size=14, face="bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.margin = unit(c(0.5,0.5,1,1), "cm")
# legend.position="none"
) +
scale_color_manual(name = "Model 1",
labels=c("MBB", "MAA", "MCC", "ma", "mc", "ma", "mc", "ma", "mc", "ma", "mc"))
p
p <- ggplot(mat.melt, aes(x=Var1, y=value, fill = mycolor)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = NA) +
# theme_gray() +
# labs(title = my.title, x = "", y = my.ylabel) +
# theme(axis.text.x = element_text(size=12, angle = 45, hjust = 1),
#       plot.title = element_text(size=14, face="bold", hjust = 0.5),
#       plot.subtitle = element_text(hjust = 0.5),
#       plot.margin = unit(c(0.5,0.5,1,1), "cm")
#       # legend.position="none"
# ) +
scale_color_manual(name = "Model 1",
labels=c("MBB", "MAA", "MCC", "ma", "mc", "ma", "mc", "ma", "mc", "ma", "mc"))
p
p <- ggplot(mat.melt, aes(x=Var1, y=value, fill = mycolor)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = NA) +
theme_gray() +
labs(title = my.title, x = "", y = my.ylabel) +
theme(axis.text.x = element_text(size=12, angle = 45, hjust = 1),
plot.title = element_text(size=14, face="bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.margin = unit(c(0.5,0.5,1,1), "cm")
# legend.position="none"
) +
scale_fill_discrete(name = "Model 1",
labels=c("MBB", "MAA", "MCC", "ma", "mc", "ma", "mc", "ma", "mc", "ma", "mc"))
p
feature.categories = read.csv("/home/zhihuan/Documents/20181207_Hypoxemia/20190103_ICM_LSTM/data/feature_categories.csv", row.names = 1)
feature.categories = read.csv("/home/zhihuan/Documents/20181207_Hypoxemia/20190103_ICM_LSTM/data/feature_categories.csv", row.names = 1)
feature.categories
palette <- distinctColorPalette(length(unique(color)))
palette
color
feature.categories
feature.categories$CLASS1
names = unique(feature.categories$CLASS1_NAME)
names
options(stringsAsFactors = F)
feature.categories = read.csv("/home/zhihuan/Documents/20181207_Hypoxemia/20190103_ICM_LSTM/data/feature_categories.csv", row.names = 1)
# color = feature.categories[rownames(mat),]$CLASS1 + 1
palette <- distinctColorPalette(length(unique(feature.categories$CLASS1)))
color_names = unique(feature.categories$CLASS1_NAME)
color_names
palette
ggplot(mat.melt, aes(x=Var1, y=value, fill = mycolor)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = NA) +
theme_gray() +
labs(title = my.title, x = "", y = my.ylabel) +
theme(axis.text.x = element_text(size=12, angle = 45, hjust = 1),
plot.title = element_text(size=14, face="bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.margin = unit(c(0.5,0.5,1,1), "cm")
# legend.position="none"
)
feature.categories
feature.categories$color = palette[feature.categories[rownames(mat),]$CLASS1+1]
feature.categories
palette
mat.melt$Categories = feature.categories[mat.melt$Var1, "CLASS1_NAME"]
mat.melt = melt(as.matrix(mat))
mat.melt$Categories = feature.categories[mat.melt$Var1, "CLASS1_NAME"]
mat.melt
p <- ggplot(mat.melt, aes(x=Var1, y=value, fill = Categories)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = NA) +
theme_gray() +
labs(title = my.title, x = "", y = my.ylabel) +
theme(axis.text.x = element_text(size=12, angle = 45, hjust = 1),
plot.title = element_text(size=14, face="bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.margin = unit(c(0.5,0.5,1,1), "cm")
# legend.position="none"
) +
scale_fill_discrete(name = "Model 1",
labels=c("MBB", "MAA", "MCC", "ma", "mc", "ma", "mc", "ma", "mc", "ma", "mc"))
p
p <- ggplot(mat.melt, aes(x=Var1, y=value, fill = Categories)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = NA) +
theme_gray() +
labs(title = my.title, x = "", y = my.ylabel) +
theme(axis.text.x = element_text(size=12, angle = 45, hjust = 1),
plot.title = element_text(size=14, face="bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.margin = unit(c(0.5,0.5,1,1), "cm")
# legend.position="none"
)
p
mat.melt
sortindex
sortindex = sort.int(apply(mat, 1, median), index.return = T, decreasing = F)$ix
sortindex
mat=fr.auc[,1:5]
sortindex = sort.int(apply(mat, 1, median), index.return = T, decreasing = F)$ix
sortindex
mat = mat[sortindex,]
ggplot(mat.melt, aes(x=Var1, y=value, factor(fill = Categories, levels = sortindex) )) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = NA)
mat.melt$mycolor = feature.categories[mat.melt$Var1, "color"]
mat.melt
color_names
palette
sort(palette)
color_names = color_names[sort.int(palette, index.return = T)$ix]
color_names
p <- ggplot(mat.melt, aes(x=Var1, y=value, fill = mycolor)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = NA) +
theme_gray() +
labs(title = my.title, x = "", y = my.ylabel) +
theme(axis.text.x = element_text(size=12, angle = 45, hjust = 1),
plot.title = element_text(size=14, face="bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.margin = unit(c(0.5,0.5,1,1), "cm")
# legend.position="none"
) +
scale_fill_discrete(name = "Categories", labels=color_names)
p
library(randomcoloR)
options(stringsAsFactors = F)
setwd("/home/zhihuan/Documents/20181207_Hypoxemia/20190103_ICM_LSTM/Results/20180105 data: 42 features normalized")
gap = 6
feature.categories = read.csv("/home/zhihuan/Documents/20181207_Hypoxemia/20190103_ICM_LSTM/data/feature_categories.csv", row.names = 1)
feature_ranking_path = paste0("/home/zhihuan/Documents/20181207_Hypoxemia/20190103_ICM_LSTM/Results/20180105 data: 42 features normalized/LSTM_20190105_normalized/LSTM_8_1_ep=100_dr=0.2_lr=0.005_l2=0_l1=0.001",
"/Gap_", gap, "/feature_ranking")
fr.auc = read.csv(paste(feature_ranking_path, "AUC.csv", sep = "/"), row.names = 1)
fr.f1 = read.csv(paste(feature_ranking_path, "F1.csv", sep = "/"), row.names = 1)
fr.precision = read.csv(paste(feature_ranking_path, "Precision.csv", sep = "/"), row.names = 1)
fr.recall = read.csv(paste(feature_ranking_path, "Recall.csv", sep = "/"), row.names = 1)
rownames(fr.auc)[rownames(fr.auc) == "Temprate"] = "TEMPERATURE"
rownames(fr.f1)[rownames(fr.f1) == "Temprate"] = "TEMPERATURE"
rownames(fr.precision)[rownames(fr.precision) == "Temprate"] = "TEMPERATURE"
rownames(fr.recall)[rownames(fr.recall) == "Temprate"] = "TEMPERATURE"
feature_ranking_boxplot <- function(mat, sortby, my.title = "Title", my.ylabel = "AUC"){
if (sortby == "median"){
sortindex = sort.int(apply(mat, 1, median), index.return = T, decreasing = F)$ix
}
if (sortby == "mean"){
sortindex = sort.int(apply(mat, 1, mean), index.return = T, decreasing = F)$ix
}
mat = mat[sortindex,]
# color = feature.categories[rownames(mat),]$CLASS1 + 1
palette <- distinctColorPalette(length(unique(feature.categories$CLASS1)))
color_names = unique(feature.categories$CLASS1_NAME)
color_names = color_names[sort.int(palette, index.return = T)$ix]
feature.categories$color = palette[feature.categories[rownames(mat),]$CLASS1+1]
mat.melt = melt(as.matrix(mat))
mat.melt$mycolor = feature.categories[mat.melt$Var1, "color"]
p <- ggplot(mat.melt, aes(x=Var1, y=value, fill = mycolor)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = NA) +
theme_gray() +
labs(title = my.title, x = "", y = my.ylabel) +
theme(axis.text.x = element_text(size=12, angle = 45, hjust = 1),
plot.title = element_text(size=14, face="bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.margin = unit(c(0.5,0.5,1,1), "cm")
# legend.position="none"
) +
scale_fill_discrete(name = "Categories", labels=color_names)
p
return(p)
}
p41 <- feature_ranking_boxplot(fr.auc[,1:5], "median",
paste0("Feature Importance (MIMIC Test Set, Gap=", gap ,") evaluated by AUC"),
"AUC")
p42 <- feature_ranking_boxplot(fr.auc[,6:10], "median",
paste0("Feature Importance (EICU Dataset, Gap=", gap ,") evaluated by AUC"),
"AUC")
p43 <- feature_ranking_boxplot(fr.f1[,1:5], "median",
paste0("Feature Importance (MIMIC Test Set, Gap=", gap ,") evaluated by F1 Score"),
"F1 Score")
p44 <- feature_ranking_boxplot(fr.f1[,6:10], "median",
paste0("Feature Importance (EICU Dataset, Gap=", gap ,") evaluated by F1 Score"),
"F1 Score")
Fig4 <- plot_grid(p41, p42, p43, p44, nrow=2, labels = c("A", "B", "C", "D"), align = "h")
Fig4
p43
ggsave("Figs and Tables/Fig4.png", plot = Fig4, width = 15, height = 10, units = "in", dpi=600)
ggsave("Figs and Tables/Fig4_MIMIC_AUC.png", plot = p41, width = 15, height = 10, units = "in", dpi=600)
ggsave("Figs and Tables/Fig4_MIMIC_F1.png", plot = p43, width = 15, height = 10, units = "in", dpi=600)
ggsave("Figs and Tables/Fig4_EICU_AUC.png", plot = p42, width = 15, height = 10, units = "in", dpi=600)
ggsave("Figs and Tables/Fig4_MIMIC_F1.png", plot = p44, width = 15, height = 10, units = "in", dpi=600)
library(randomcoloR)
options(stringsAsFactors = F)
setwd("/home/zhihuan/Documents/20181207_Hypoxemia/20190103_ICM_LSTM/Results/20180105 data: 42 features normalized")
gap = 6
feature.categories = read.csv("/home/zhihuan/Documents/20181207_Hypoxemia/20190103_ICM_LSTM/data/feature_categories.csv", row.names = 1)
palette <- distinctColorPalette(length(unique(feature.categories$CLASS1)))
color_names = unique(feature.categories$CLASS1_NAME)
color_names = color_names[sort.int(palette, index.return = T)$ix]
feature_ranking_path = paste0("/home/zhihuan/Documents/20181207_Hypoxemia/20190103_ICM_LSTM/Results/20180105 data: 42 features normalized/LSTM_20190105_normalized/LSTM_8_1_ep=100_dr=0.2_lr=0.005_l2=0_l1=0.001",
"/Gap_", gap, "/feature_ranking")
fr.auc = read.csv(paste(feature_ranking_path, "AUC.csv", sep = "/"), row.names = 1)
fr.f1 = read.csv(paste(feature_ranking_path, "F1.csv", sep = "/"), row.names = 1)
fr.precision = read.csv(paste(feature_ranking_path, "Precision.csv", sep = "/"), row.names = 1)
fr.recall = read.csv(paste(feature_ranking_path, "Recall.csv", sep = "/"), row.names = 1)
rownames(fr.auc)[rownames(fr.auc) == "Temprate"] = "TEMPERATURE"
rownames(fr.f1)[rownames(fr.f1) == "Temprate"] = "TEMPERATURE"
rownames(fr.precision)[rownames(fr.precision) == "Temprate"] = "TEMPERATURE"
rownames(fr.recall)[rownames(fr.recall) == "Temprate"] = "TEMPERATURE"
feature_ranking_boxplot <- function(mat, sortby, my.title = "Title", my.ylabel = "AUC"){
if (sortby == "median"){
sortindex = sort.int(apply(mat, 1, median), index.return = T, decreasing = F)$ix
}
if (sortby == "mean"){
sortindex = sort.int(apply(mat, 1, mean), index.return = T, decreasing = F)$ix
}
mat = mat[sortindex,]
thecolor = palette[feature.categories[rownames(mat),]$CLASS1+1]
mat.melt = melt(as.matrix(mat))
mat.melt$mycolor = thecolor[mat.melt$Var1]
p <- ggplot(mat.melt, aes(x=Var1, y=value, fill = mycolor)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = NA) +
theme_gray() +
labs(title = my.title, x = "", y = my.ylabel) +
theme(axis.text.x = element_text(size=12, angle = 45, hjust = 1),
plot.title = element_text(size=14, face="bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.margin = unit(c(0.5,0.5,1,1), "cm")
# legend.position="none"
) +
scale_fill_discrete(name = "Categories", labels=color_names)
p
return(p)
}
p41 <- feature_ranking_boxplot(fr.auc[,1:5], "median",
paste0("Feature Importance (MIMIC Test Set, Gap=", gap ,") evaluated by AUC"),
"AUC")
p42 <- feature_ranking_boxplot(fr.auc[,6:10], "median",
paste0("Feature Importance (EICU Dataset, Gap=", gap ,") evaluated by AUC"),
"AUC")
p43 <- feature_ranking_boxplot(fr.f1[,1:5], "median",
paste0("Feature Importance (MIMIC Test Set, Gap=", gap ,") evaluated by F1 Score"),
"F1 Score")
p44 <- feature_ranking_boxplot(fr.f1[,6:10], "median",
paste0("Feature Importance (EICU Dataset, Gap=", gap ,") evaluated by F1 Score"),
"F1 Score")
Fig4 <- plot_grid(p41, p42, p43, p44, nrow=2, labels = c("A", "B", "C", "D"), align = "h")
Fig4
p43
ggsave("Figs and Tables/Fig4.png", plot = Fig4, width = 15, height = 10, units = "in", dpi=600)
ggsave("Figs and Tables/Fig4_MIMIC_AUC.png", plot = p41, width = 15, height = 10, units = "in", dpi=600)
ggsave("Figs and Tables/Fig4_MIMIC_F1.png", plot = p43, width = 15, height = 10, units = "in", dpi=600)
ggsave("Figs and Tables/Fig4_EICU_AUC.png", plot = p42, width = 15, height = 10, units = "in", dpi=600)
ggsave("Figs and Tables/Fig4_MIMIC_F1.png", plot = p44, width = 15, height = 10, units = "in", dpi=600)
ggsave("Figs and Tables/Fig4_MIMIC_AUC.png", plot = p41, width = 15, height = 10, units = "in", dpi=600)
ggsave("Figs and Tables/Fig4_MIMIC_F1.png", plot = p43, width = 15, height = 10, units = "in", dpi=600)
ggsave("Figs and Tables/Fig4_EICU_AUC.png", plot = p42, width = 15, height = 10, units = "in", dpi=600)
ggsave("Figs and Tables/Fig4_EICU_F1.png", plot = p44, width = 15, height = 10, units = "in", dpi=600)
ggsave("Figs and Tables/Fig4_MIMIC_AUC.png", plot = p41, width = 10, height = 6, units = "in", dpi=600)
ggsave("Figs and Tables/Fig4_MIMIC_F1.png", plot = p43, width = 10, height = 6, units = "in", dpi=600)
ggsave("Figs and Tables/Fig4_EICU_AUC.png", plot = p42, width = 10, height = 6, units = "in", dpi=600)
ggsave("Figs and Tables/Fig4_EICU_F1.png", plot = p44, width = 10, height = 6, units = "in", dpi=600)
feature_ranking_boxplot <- function(mat, sortby, my.title = "Title", my.ylabel = "AUC"){
if (sortby == "median"){
sortindex = sort.int(apply(mat, 1, median), index.return = T, decreasing = F)$ix
}
if (sortby == "mean"){
sortindex = sort.int(apply(mat, 1, mean), index.return = T, decreasing = F)$ix
}
mat = mat[sortindex,]
thecolor = palette[feature.categories[rownames(mat),]$CLASS1+1]
mat.melt = melt(as.matrix(mat))
mat.melt$mycolor = thecolor[mat.melt$Var1]
p <- ggplot(mat.melt, aes(x=Var1, y=value, fill = mycolor)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = NA) +
theme_gray() +
labs(title = my.title, x = "", y = my.ylabel) +
theme(axis.text.x = element_text(size=12, angle = 45, hjust = 1),
plot.title = element_text(size=14, face="bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)
# plot.margin = unit(c(0.5,0.5,1,1), "cm")
# legend.position="none"
) +
scale_fill_discrete(name = "Categories", labels=color_names)
p
return(p)
}
p41 <- feature_ranking_boxplot(fr.auc[,1:5], "median",
paste0("Feature Importance (MIMIC Test Set, Gap=", gap ,") evaluated by AUC"),
"AUC")
p42 <- feature_ranking_boxplot(fr.auc[,6:10], "median",
paste0("Feature Importance (EICU Dataset, Gap=", gap ,") evaluated by AUC"),
"AUC")
p43 <- feature_ranking_boxplot(fr.f1[,1:5], "median",
paste0("Feature Importance (MIMIC Test Set, Gap=", gap ,") evaluated by F1 Score"),
"F1 Score")
p44 <- feature_ranking_boxplot(fr.f1[,6:10], "median",
paste0("Feature Importance (EICU Dataset, Gap=", gap ,") evaluated by F1 Score"),
"F1 Score")
ggsave("Figs and Tables/Fig4_MIMIC_AUC.png", plot = p41, width = 12, height = 8, units = "in", dpi=600)
ggsave("Figs and Tables/Fig4_MIMIC_F1.png", plot = p43, width = 12, height = 8, units = "in", dpi=600)
ggsave("Figs and Tables/Fig4_EICU_AUC.png", plot = p42, width = 12, height = 8, units = "in", dpi=600)
ggsave("Figs and Tables/Fig4_EICU_F1.png", plot = p44, width = 12, height = 8, units = "in", dpi=600)
ggsave("Figs and Tables/Fig4_MIMIC_AUC.png", plot = p41, width = 12, height = 6, units = "in", dpi=600)
ggsave("Figs and Tables/Fig4_MIMIC_F1.png", plot = p43, width = 12, height = 6, units = "in", dpi=600)
ggsave("Figs and Tables/Fig4_EICU_AUC.png", plot = p42, width = 12, height = 6, units = "in", dpi=600)
ggsave("Figs and Tables/Fig4_EICU_F1.png", plot = p44, width = 12, height = 6, units = "in", dpi=600)
MIMIC = read.csv("/home/zhihuan/Documents/20181207_Hypoxemia/20190103_ICM_LSTM/data/MIMIC_final_data_for_LSTM_20190102.csv")
EICU = read.csv("/home/zhihuan/Documents/20181207_Hypoxemia/20190103_ICM_LSTM/data/EICU_final_data_for_LSTM_20190102.csv")
ETHNICITY = c("Hispanic", "Native American", "Asian", "Caucasian", "African American", "Other/Unknown")
colnames(MIMIC)
table(MIMIC$ICU)
colnames(MIMIC)
table(MIMIC$ICU)
age = MIMIC$AGE
age[age >= 89] = 89
mean(age)
median(age)
min(age)
max(age)
table(MIMIC$GENDER)
et = data.frame(table(MIMIC$ETHNICITY))
rownames(et) = ETHNICITY
et
sum(MIMIC$IS_VENT == 1 & MIMIC$IS_VENT_P_F_ratio_target == 1) # positive
sum(MIMIC$IS_VENT == 0 & MIMIC$IS_VENT_P_F_ratio_target == 0) # negative
sum(EICU$IS_VENT == 1 & EICU$IS_VENT_P_F_ratio_target == 1) # positive
sum(EICU$IS_VENT == 0 & EICU$IS_VENT_P_F_ratio_target == 0) # negative
colnames(MIMIC)
table(MIMIC$ICU)
age = MIMIC$AGE
age[age >= 89] = 89
mean(age)
median(age)
min(age)
max(age)
table(MIMIC$GENDER)
et = data.frame(table(MIMIC$ETHNICITY))
rownames(et) = ETHNICITY
et
sum(MIMIC$IS_VENT == 1 & MIMIC$IS_VENT_P_F_ratio_target == 1) # positive
sum(MIMIC$IS_VENT == 0 & MIMIC$IS_VENT_P_F_ratio_target == 0) # negative
sum(MIMIC$IS_VENT == 1 & MIMIC$IS_VENT_P_F_ratio_target == 1 & MIMIC$GENDER == "F") # female in positive
sum(MIMIC$IS_VENT == 0 & MIMIC$IS_VENT_P_F_ratio_target == 0 & MIMIC$GENDER == "F") # female in negative
sum(MIMIC$IS_VENT == 1 & MIMIC$IS_VENT_P_F_ratio_target == 1 & MIMIC$GENDER == "M") # male in positive
sum(MIMIC$IS_VENT == 0 & MIMIC$IS_VENT_P_F_ratio_target == 0 & MIMIC$GENDER == "M") # male in negative
sum(MIMIC$IS_VENT == 1 & MIMIC$IS_VENT_P_F_ratio_target == 1 & MIMIC$GENDER == "F") + # female in positive
sum(MIMIC$IS_VENT == 0 & MIMIC$IS_VENT_P_F_ratio_target == 0 & MIMIC$GENDER == "F") # female in negative
sum(MIMIC$IS_VENT == 1 & MIMIC$IS_VENT_P_F_ratio_target == 1 & MIMIC$GENDER == "M") + # male in positive
sum(MIMIC$IS_VENT == 0 & MIMIC$IS_VENT_P_F_ratio_target == 0 & MIMIC$GENDER == "M") # male in negative
median(MIMIC$LOS) # length of stays (days)
min(MIMIC$LOS) # length of stays (days)
max(MIMIC$LOS) # length of stays (days)
median(age)
min(age)
max(age)
colnames(EICU)
table(EICU$ICU)
age = EICU$AGE
mean(age)
median(age)
min(age)
max(age)
sum(EICU$IS_VENT == 1 & EICU$IS_VENT_P_F_ratio_target == 1) # positive
sum(EICU$IS_VENT == 0 & EICU$IS_VENT_P_F_ratio_target == 0) # negative
sum(EICU$IS_VENT == 1 & EICU$IS_VENT_P_F_ratio_target == 1 & EICU$GENDER == 0) + # female in positive
sum(EICU$IS_VENT == 0 & EICU$IS_VENT_P_F_ratio_target == 0 & EICU$GENDER == 0) # female in negative
sum(EICU$IS_VENT == 1 & EICU$IS_VENT_P_F_ratio_target == 1 & EICU$GENDER == 1) + # male in positive
sum(EICU$IS_VENT == 0 & EICU$IS_VENT_P_F_ratio_target == 0 & EICU$GENDER == 1) # male in negative
median(EICU$LOS) # length of stays (days)
min(EICU$LOS) # length of stays (days)
max(EICU$LOS) # length of stays (days)
et = data.frame(table(EICU$ETHNICITY))
rownames(et) = ETHNICITY
et
EICU.valid = EICU[EICU$IS_VENT == EICU$IS_VENT_P_F_ratio_target,]
et = data.frame(table(EICU.valid$ETHNICITY))
rownames(et) = ETHNICITY
et
sum(et$Freq)
MIMIC.valid = MIMIC[MIMIC$IS_VENT == MIMIC$IS_VENT_P_F_ratio_target,]
et = data.frame(table(MIMIC.valid$ETHNICITY))
rownames(et) = ETHNICITY
et
