#   pval = t.test(t1, t2, paired=T, conf.level=0.95)$p.value
#   gap.model.pval[i,j] = pval
#   if (pval < 0.05){
#     gap.model.pval.symbol[i,j] = "*"
#   }
# }
melted = traditional.tensor.in[,,i]
colnames(melted) = rown
rownames(melted) = coln
melted = melt(melted)
melted = cbind(rep(model.names[i+1], dim(melted)[1]), melted)
colnames(melted)[1] = "Model"
all.melt = rbind(all.melt, melted)
}
p <- ggplot(all.melt, aes(x=Var2, y=value, fill = Model)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = 21) +
theme_gray() +
labs(title = my.title, x = "", y = my.ylabel) +
theme(axis.text.x = element_text(size=12),
plot.title = element_text(size=14, face="bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="bottom"
) +
guides(fill=guide_legend(nrow=2,byrow=TRUE))
# scale_fill_brewer(palette="RdYlBu") +
# annotate("text", color = "black", x = 1:dim(lstm.mat.in)[2], y = apply(lstm.mat.in, 2, max),
#          label = "*")
return(p)
}
model.names = c("LSTM", "Logistic Regression (L1)", "Logistic Regression (L2)")
print(result_folders)
p31 <- modelcompareplot_with_trad(t(MIMIC.auc_mat), MIMIC.trad.auc_mat, model.names,
"Model Performance (AUC) with Different Gap Hours (MIMIC Test Set)", "AUC")
p32 <- modelcompareplot_with_trad(t(MIMIC.f1_mat), MIMIC.trad.f1_mat, model.names,
"Model Performance (F1 Score) with Different Gap Hours (MIMIC Test Set)", "F1 Score")
p33 <- modelcompareplot_with_trad(t(EICU.auc_mat), EICU.trad.auc_mat, model.names,
"Model Performance (AUC) with Different Gap Hours (EICU Test Set)", "AUC")
p34 <- modelcompareplot_with_trad(t(EICU.f1_mat), EICU.trad.f1_mat, model.names,
"Model Performance (F1) Score with Different Gap Hours (EICU Test Set)", "F1 Score")
p31
p32
p33 <- modelcompareplot_with_trad(t(EICU.auc_mat), EICU.trad.auc_mat, model.names,
"Model Performance (AUC) with Different Gap Hours (EICU Test Set)", "AUC")
p34 <- modelcompareplot_with_trad(t(EICU.f1_mat), EICU.trad.f1_mat, model.names,
"Model Performance (F1) Score with Different Gap Hours (EICU Test Set)", "F1 Score")
p33
p34
p33
p35 <- modelcompareplot_with_trad(t(MIMIC.P_mat), MIMIC.trad.P_mat, model.names,
"Model Performance (Precision) with Different Gap Hours (MIMIC Test Set)", "Precision")
p36 <- modelcompareplot_with_trad(t(MIMIC.R_mat), MIMIC.trad.R_mat, model.names,
"Model Performance (Recall) with Different Gap Hours (MIMIC Test Set)", "Recall")
p35
p36
##################################################
#    LSTM feature ranking
##################################################
library(randomcoloR)
options(stringsAsFactors = F)
setwd("/home/zhihuan/Documents/20181207_Hypoxemia/20190103_ICM_LSTM/Results/20180105 data: 42 features normalized")
gap = 6
feature.categories = read.csv("/home/zhihuan/Documents/20181207_Hypoxemia/20190103_ICM_LSTM/data/feature_categories.csv", row.names = 1)
palette <- distinctColorPalette(length(unique(feature.categories$CLASS1)))
color_names = unique(feature.categories$CLASS1_NAME)
color_names = color_names[sort.int(palette, index.return = T)$ix]
feature_ranking_path = paste0("/home/zhihuan/Documents/20181207_Hypoxemia/20190103_ICM_LSTM/Results/LSTM_20190107_normalized/LSTM_optunity200_ep=100_l2=0",
"/Gap_", gap, "/feature_ranking")
fr.auc = read.csv(paste(feature_ranking_path, "AUC.csv", sep = "/"), row.names = 1)
fr.f1 = read.csv(paste(feature_ranking_path, "F1.csv", sep = "/"), row.names = 1)
fr.precision = read.csv(paste(feature_ranking_path, "Precision.csv", sep = "/"), row.names = 1)
fr.recall = read.csv(paste(feature_ranking_path, "Recall.csv", sep = "/"), row.names = 1)
rownames(fr.auc)[rownames(fr.auc) == "Temprate"] = "TEMPERATURE"
rownames(fr.f1)[rownames(fr.f1) == "Temprate"] = "TEMPERATURE"
rownames(fr.precision)[rownames(fr.precision) == "Temprate"] = "TEMPERATURE"
rownames(fr.recall)[rownames(fr.recall) == "Temprate"] = "TEMPERATURE"
feature_ranking_boxplot <- function(mat, sortby, my.title = "Title", my.ylabel = "AUC"){
if (sortby == "median"){
sortindex = sort.int(apply(mat, 1, median), index.return = T, decreasing = F)$ix
}
if (sortby == "mean"){
sortindex = sort.int(apply(mat, 1, mean), index.return = T, decreasing = F)$ix
}
mat = mat[sortindex,]
thecolor = palette[feature.categories[rownames(mat),]$CLASS1+1]
mat.melt = melt(as.matrix(mat))
mat.melt$mycolor = thecolor[mat.melt$Var1]
p <- ggplot(mat.melt, aes(x=Var1, y=value, fill = mycolor)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = NA) +
theme_gray() +
labs(title = my.title, x = "", y = my.ylabel) +
theme(axis.text.x = element_text(size=12, angle = 45, hjust = 1),
plot.title = element_text(size=14, face="bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)
# plot.margin = unit(c(0.5,0.5,1,1), "cm")
# legend.position="none"
) +
scale_fill_discrete(name = "Categories", labels=color_names)
p
return(p)
}
p41 <- feature_ranking_boxplot(fr.auc[,1:5], "median",
paste0("Feature Importance (MIMIC Test Set, Gap=", gap ,") evaluated by AUC"),
"AUC")
p41
library(ggplot2)
library(reshape2)
library(gridExtra)
library(cowplot)
library(reticulate)
source("/home/zhihuan/Documents/20181207_Hypoxemia/20190103_ICM_LSTM/utils.R")
setwd("/home/zhihuan/Documents/20181207_Hypoxemia/20190103_ICM_LSTM/Results/LSTM_20190107_normalized/LSTM_optunity200_ep=100_l2=0")
result_folders = grep("Gap", dir("."), value=TRUE)[5:6]
rown = c("Gap5","Gap6")
coln = c("fold1","fold2","fold3","fold4","fold5")
MIMIC.auc_mat = data.frame(matrix(NA, ncol = length(coln), nrow = length(rown)))
MIMIC.f1_mat = data.frame(matrix(NA, ncol = length(coln), nrow = length(rown)))
MIMIC.P_mat = data.frame(matrix(NA, ncol = length(coln), nrow = length(rown)))
MIMIC.R_mat = data.frame(matrix(NA, ncol = length(coln), nrow = length(rown)))
EICU.auc_mat = data.frame(matrix(NA, ncol = length(coln), nrow = length(rown)))
EICU.f1_mat = data.frame(matrix(NA, ncol = length(coln), nrow = length(rown)))
EICU.P_mat = data.frame(matrix(NA, ncol = length(coln), nrow = length(rown)))
EICU.R_mat = data.frame(matrix(NA, ncol = length(coln), nrow = length(rown)))
colnames(MIMIC.auc_mat) = coln; rownames(MIMIC.auc_mat) = rown
colnames(MIMIC.f1_mat) = coln; rownames(MIMIC.f1_mat) = rown
colnames(MIMIC.P_mat) = coln; rownames(MIMIC.P_mat) = rown
colnames(MIMIC.R_mat) = coln; rownames(MIMIC.R_mat) = rown
colnames(EICU.auc_mat) = coln; rownames(EICU.auc_mat) = rown
colnames(EICU.f1_mat) = coln; rownames(EICU.f1_mat) = rown
colnames(EICU.P_mat) = coln; rownames(EICU.P_mat) = rown
colnames(EICU.R_mat) = coln; rownames(EICU.R_mat) = rown
i = 0
for (folders in result_folders){
message(folders)
i = i+1
j = 0
folds = grep("run_", dir(folders), value=TRUE)
for (fold in folds){
j = j+1
# message(fold)
tbl = read.csv(paste(folders, fold, 'MIMIC_AFPR_table.csv', sep = '/'), row.names = 1)
auc.train = tbl[dim(tbl)[1], 1]
auc.test = tbl[dim(tbl)[1], 2]
f1.train = tbl[dim(tbl)[1], 3]
f1.test = tbl[dim(tbl)[1], 4]
precision.test = tbl[dim(tbl)[1], 5]
recall.test = tbl[dim(tbl)[1], 6]
MIMIC.auc_mat[i,j] = auc.test
MIMIC.f1_mat[i,j] = f1.test
MIMIC.P_mat[i,j] = precision.test
MIMIC.R_mat[i,j] = recall.test
#EICU
lines <- readLines(paste(folders, fold, "mainlog.log", sep = "/"))
lines = lines[length(lines)]
EICU.res = as.numeric(unlist(regmatches(lines,gregexpr("[[:digit:]]+\\.*[[:digit:]]*",lines))))
EICU.auc_mat[i,j] = EICU.res[1]
EICU.f1_mat[i,j] = EICU.res[3]
EICU.P_mat[i,j] = EICU.res[4]
EICU.R_mat[i,j] = EICU.res[5]
}
}
LSTM_performance_plot <- function(mat, title, ylabel){
p <- ggplot(melt(as.matrix(mat)), aes(x=Var2, y=value, fill = Var2)) +
geom_boxplot(width=0.2, color="black", size = 0.7, outlier.shape = 21) +
theme_gray() +
# scale_y_continuous(limits = c(0.52, 1)) +
labs(title = title,
x = "", y = ylabel, fill = "Datasets") +
theme(axis.text.x = element_text(size=12),
plot.title = element_text(size=14, face="bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="none"
) +
scale_fill_brewer(palette="Oranges") +
annotate("point", color = "blue", x = 1:dim(mat)[2], y = apply(mat, 2, median)) +
annotate("text", color = "black", x = 1:dim(mat)[2], y = min(mat)-0.1, label = sprintf("Mean: %.4f", colMeans(mat))) +
annotate("text", color = "blue", x = 1:dim(mat)[2], y = apply(mat, 2, median)-0.02, label = sprintf("Median: %.4f", apply(mat, 2, median)))
return(p)
}
p21 <- LSTM_performance_plot(t(MIMIC.auc_mat), "LSTM AUC Performance with Different Gap Hours (MIMIC Test Set)", "AUC")
p22 <- LSTM_performance_plot(t(MIMIC.f1_mat), "LSTM F1 Score with Different Gap Hours (MIMIC Test Set)", "F1 Score")
p23 <- LSTM_performance_plot(t(EICU.auc_mat), "LSTM AUC Performance with Different Gap Hours (EICU Test Set)", "AUC")
p24 <- LSTM_performance_plot(t(EICU.f1_mat), "LSTM F1 Score with Different Gap Hours (EICU Test Set)", "F1 Score")
Fig2 <- plot_grid(p21, p22, p23, p24, nrow=2, labels = c("A", "B", "C", "D"), align = "h")
Fig2
###############################
# Traditional Models
###############################
setwd("/home/zhihuan/Documents/20181207_Hypoxemia/20190103_ICM_LSTM/Results/Traditional_20190107_normalized")
result_folders = dir(".")
result_folders = result_folders[result_folders %in% c("logit_l1", "logit_l2")]
rown = c("Gap5","Gap6")
coln = c("fold1","fold2","fold3","fold4","fold5")
MIMIC.trad.auc_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
MIMIC.trad.f1_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
MIMIC.trad.P_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
MIMIC.trad.R_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
EICU.trad.auc_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
EICU.trad.f1_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
EICU.trad.P_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
EICU.trad.R_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
i = 0
for (model in result_folders){
message(model)
i = i+1
j = 0
gaps = dir(model)
for (gap in gaps){
j = j+1
k = 0
for (fold in dir(paste(model, gap, sep = "/"))){
k = k+1
# message(fold)
tbl = read.csv(paste(model, gap, fold, 'MIMIC_AFPR_table.csv', sep = '/'), row.names = 1)
auc.train = tbl[1, 1]
auc.test = tbl[2, 1]
f1.train = tbl[3, 1]
f1.test = tbl[4, 1]
precision.test = tbl[5, 1]
recall.test = tbl[6, 1]
MIMIC.trad.auc_mat[k,j,i] = auc.test
MIMIC.trad.f1_mat[k,j,i] = f1.test
MIMIC.trad.P_mat[k,j,i] = precision.test
MIMIC.trad.R_mat[k,j,i] = recall.test
#EICU
lines <- readLines(paste(model, gap, fold, "mainlog.log", sep = "/"))
lines = lines[length(lines)]
EICU.res = as.numeric(unlist(regmatches(lines,gregexpr("[[:digit:]]+\\.*[[:digit:]]*",lines))))
EICU.trad.auc_mat[k,j,i] = EICU.res[1]
EICU.trad.f1_mat[k,j,i] = EICU.res[3]
EICU.trad.P_mat[k,j,i] = EICU.res[4]
EICU.trad.R_mat[k,j,i] = EICU.res[5]
}
}
}
modelcompareplot_with_trad <- function(lstm.mat.in, traditional.tensor.in, model.names, my.title, my.ylabel){
mat.melt = melt(lstm.mat.in)
all.melt = cbind(rep("LSTM", dim(mat.melt)[1]), mat.melt)
colnames(all.melt)[1] = "Model"
# construct gap - model matrix contains t-test (paired) p-value
# gap.model.pval = data.frame(matrix(NA, nrow = dim(traditional.tensor.in)[3], ncol = dim(lstm.mat.in)[2]))
# gap.model.pval.symbol = data.frame(matrix(" ", nrow = dim(traditional.tensor.in)[3], ncol = dim(lstm.mat.in)[2]))
for (i in 1:dim(traditional.tensor.in)[3]){
# for (j in 1:dim(lstm.mat.in)[2]){#Gaps
#   t1 = mat.melt[mat.melt$Var2 == sprintf("Gap%d",j),]$value
#   t2 = traditional.tensor.in[,j,i]
#   pval = t.test(t1, t2, paired=T, conf.level=0.95)$p.value
#   gap.model.pval[i,j] = pval
#   if (pval < 0.05){
#     gap.model.pval.symbol[i,j] = "*"
#   }
# }
melted = traditional.tensor.in[,,i]
colnames(melted) = rown
rownames(melted) = coln
melted = melt(melted)
melted = cbind(rep(model.names[i+1], dim(melted)[1]), melted)
colnames(melted)[1] = "Model"
all.melt = rbind(all.melt, melted)
}
p <- ggplot(all.melt, aes(x=Var2, y=value, fill = Model)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = 21) +
theme_gray() +
labs(title = my.title, x = "", y = my.ylabel) +
theme(axis.text.x = element_text(size=12),
plot.title = element_text(size=14, face="bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="bottom"
) +
guides(fill=guide_legend(nrow=2,byrow=TRUE))
# scale_fill_brewer(palette="RdYlBu") +
# annotate("text", color = "black", x = 1:dim(lstm.mat.in)[2], y = apply(lstm.mat.in, 2, max),
#          label = "*")
return(p)
}
print(result_folders)
model.names = c("LSTM", "Logistic Regression (L1)", "Logistic Regression (L2)")
p31 <- modelcompareplot_with_trad(t(MIMIC.auc_mat), MIMIC.trad.auc_mat, model.names,
"Model Performance (AUC) with Different Gap Hours (MIMIC Test Set)", "AUC")
p32 <- modelcompareplot_with_trad(t(MIMIC.f1_mat), MIMIC.trad.f1_mat, model.names,
"Model Performance (F1 Score) with Different Gap Hours (MIMIC Test Set)", "F1 Score")
p33 <- modelcompareplot_with_trad(t(EICU.auc_mat), EICU.trad.auc_mat, model.names,
"Model Performance (AUC) with Different Gap Hours (EICU Test Set)", "AUC")
p34 <- modelcompareplot_with_trad(t(EICU.f1_mat), EICU.trad.f1_mat, model.names,
"Model Performance (F1) Score with Different Gap Hours (EICU Test Set)", "F1 Score")
p35 <- modelcompareplot_with_trad(t(MIMIC.P_mat), MIMIC.trad.P_mat, model.names,
"Model Performance (Precision) with Different Gap Hours (MIMIC Test Set)", "Precision")
p36 <- modelcompareplot_with_trad(t(MIMIC.R_mat), MIMIC.trad.R_mat, model.names,
"Model Performance (Recall) with Different Gap Hours (MIMIC Test Set)", "Recall")
Fig3 <- plot_grid(p31, p32, p33, p34, nrow=2, labels = c("A", "B", "C", "D"), align = "h")
Fig3
model.names
MIMIC.auc_mat
MIMIC.trad.auc_mat
model.names
modelcompareplot_with_trad <- function(lstm.mat.in, traditional.tensor.in, model.names, my.title, my.ylabel){
mat.melt = melt(lstm.mat.in)
all.melt = cbind(rep("LSTM", dim(mat.melt)[1]), mat.melt)
colnames(all.melt)[1] = "Model"
# construct gap - model matrix contains t-test (paired) p-value
# gap.model.pval = data.frame(matrix(NA, nrow = dim(traditional.tensor.in)[3], ncol = dim(lstm.mat.in)[2]))
# gap.model.pval.symbol = data.frame(matrix(" ", nrow = dim(traditional.tensor.in)[3], ncol = dim(lstm.mat.in)[2]))
for (i in 1:dim(traditional.tensor.in)[3]){
# for (j in 1:dim(lstm.mat.in)[2]){#Gaps
#   t1 = mat.melt[mat.melt$Var2 == sprintf("Gap%d",j),]$value
#   t2 = traditional.tensor.in[,j,i]
#   pval = t.test(t1, t2, paired=T, conf.level=0.95)$p.value
#   gap.model.pval[i,j] = pval
#   if (pval < 0.05){
#     gap.model.pval.symbol[i,j] = "*"
#   }
# }
melted = traditional.tensor.in[,,i]
colnames(melted) = rown
rownames(melted) = coln
melted = melt(melted)
melted = cbind(rep(model.names[i+1], dim(melted)[1]), melted)
colnames(melted)[1] = "Model"
all.melt = rbind(all.melt, melted)
}
p <- ggplot(all.melt, aes(factor(x=Var2, levels=Var2), y=value, fill = Model)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = 21) +
theme_gray() +
labs(title = my.title, x = "", y = my.ylabel) +
theme(axis.text.x = element_text(size=12),
plot.title = element_text(size=14, face="bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="bottom"
) +
guides(fill=guide_legend(nrow=2,byrow=TRUE))
# scale_fill_brewer(palette="RdYlBu") +
# annotate("text", color = "black", x = 1:dim(lstm.mat.in)[2], y = apply(lstm.mat.in, 2, max),
#          label = "*")
return(p)
}
print(result_folders)
model.names = c("LSTM", "Logistic Regression (L1)", "Logistic Regression (L2)")
p31 <- modelcompareplot_with_trad(t(MIMIC.auc_mat), MIMIC.trad.auc_mat, model.names,
"Model Performance (AUC) with Different Gap Hours (MIMIC Test Set)", "AUC")
p32 <- modelcompareplot_with_trad(t(MIMIC.f1_mat), MIMIC.trad.f1_mat, model.names,
"Model Performance (F1 Score) with Different Gap Hours (MIMIC Test Set)", "F1 Score")
p33 <- modelcompareplot_with_trad(t(EICU.auc_mat), EICU.trad.auc_mat, model.names,
"Model Performance (AUC) with Different Gap Hours (EICU Test Set)", "AUC")
p34 <- modelcompareplot_with_trad(t(EICU.f1_mat), EICU.trad.f1_mat, model.names,
"Model Performance (F1) Score with Different Gap Hours (EICU Test Set)", "F1 Score")
p35 <- modelcompareplot_with_trad(t(MIMIC.P_mat), MIMIC.trad.P_mat, model.names,
"Model Performance (Precision) with Different Gap Hours (MIMIC Test Set)", "Precision")
p36 <- modelcompareplot_with_trad(t(MIMIC.R_mat), MIMIC.trad.R_mat, model.names,
"Model Performance (Recall) with Different Gap Hours (MIMIC Test Set)", "Recall")
Fig3 <- plot_grid(p31, p32, p33, p34, nrow=2, labels = c("A", "B", "C", "D"), align = "h")
Fig3
modelcompareplot_with_trad <- function(lstm.mat.in, traditional.tensor.in, model.names, my.title, my.ylabel){
mat.melt = melt(lstm.mat.in)
all.melt = cbind(rep("LSTM", dim(mat.melt)[1]), mat.melt)
colnames(all.melt)[1] = "Model"
# construct gap - model matrix contains t-test (paired) p-value
# gap.model.pval = data.frame(matrix(NA, nrow = dim(traditional.tensor.in)[3], ncol = dim(lstm.mat.in)[2]))
# gap.model.pval.symbol = data.frame(matrix(" ", nrow = dim(traditional.tensor.in)[3], ncol = dim(lstm.mat.in)[2]))
for (i in 1:dim(traditional.tensor.in)[3]){
# for (j in 1:dim(lstm.mat.in)[2]){#Gaps
#   t1 = mat.melt[mat.melt$Var2 == sprintf("Gap%d",j),]$value
#   t2 = traditional.tensor.in[,j,i]
#   pval = t.test(t1, t2, paired=T, conf.level=0.95)$p.value
#   gap.model.pval[i,j] = pval
#   if (pval < 0.05){
#     gap.model.pval.symbol[i,j] = "*"
#   }
# }
melted = traditional.tensor.in[,,i]
colnames(melted) = rown
rownames(melted) = coln
melted = melt(melted)
melted = cbind(rep(model.names[i+1], dim(melted)[1]), melted)
colnames(melted)[1] = "Model"
all.melt = rbind(all.melt, melted)
}
p <- ggplot(all.melt, aes(x=Var2, y=value, fill = Model)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = 21) +
theme_gray() +
labs(title = my.title, x = "", y = my.ylabel) +
theme(axis.text.x = element_text(size=12),
plot.title = element_text(size=14, face="bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="bottom"
) +
guides(fill=guide_legend(nrow=2,byrow=TRUE))
# scale_fill_brewer(palette="RdYlBu") +
# annotate("text", color = "black", x = 1:dim(lstm.mat.in)[2], y = apply(lstm.mat.in, 2, max),
#          label = "*")
return(p)
}
print(result_folders)
model.names = c("LSTM", "Logistic Regression (L1)", "Logistic Regression (L2)")
p31 <- modelcompareplot_with_trad(t(MIMIC.auc_mat), MIMIC.trad.auc_mat, model.names,
"Model Performance (AUC) with Different Gap Hours (MIMIC Test Set)", "AUC")
p32 <- modelcompareplot_with_trad(t(MIMIC.f1_mat), MIMIC.trad.f1_mat, model.names,
"Model Performance (F1 Score) with Different Gap Hours (MIMIC Test Set)", "F1 Score")
p33 <- modelcompareplot_with_trad(t(EICU.auc_mat), EICU.trad.auc_mat, model.names,
"Model Performance (AUC) with Different Gap Hours (EICU Test Set)", "AUC")
p34 <- modelcompareplot_with_trad(t(EICU.f1_mat), EICU.trad.f1_mat, model.names,
"Model Performance (F1) Score with Different Gap Hours (EICU Test Set)", "F1 Score")
p35 <- modelcompareplot_with_trad(t(MIMIC.P_mat), MIMIC.trad.P_mat, model.names,
"Model Performance (Precision) with Different Gap Hours (MIMIC Test Set)", "Precision")
p36 <- modelcompareplot_with_trad(t(MIMIC.R_mat), MIMIC.trad.R_mat, model.names,
"Model Performance (Recall) with Different Gap Hours (MIMIC Test Set)", "Recall")
Fig3 <- plot_grid(p31, p32, p33, p34, nrow=2, labels = c("A", "B", "C", "D"), align = "h")
Fig3
Fig3
lstm.mat.in = t(MIMIC.auc_mat)
traditional.tensor.in = MIMIC.trad.auc_mat
model.names
my.title = "a"
my.ylabel = "b"
mat.melt = melt(lstm.mat.in)
all.melt = cbind(rep("LSTM", dim(mat.melt)[1]), mat.melt)
colnames(all.melt)[1] = "Model"
mat.melt
mat.melt
# construct gap - model matrix contains t-test (paired) p-value
# gap.model.pval = data.frame(matrix(NA, nrow = dim(traditional.tensor.in)[3], ncol = dim(lstm.mat.in)[2]))
# gap.model.pval.symbol = data.frame(matrix(" ", nrow = dim(traditional.tensor.in)[3], ncol = dim(lstm.mat.in)[2]))
for (i in 1:dim(traditional.tensor.in)[3]){
# for (j in 1:dim(lstm.mat.in)[2]){#Gaps
#   t1 = mat.melt[mat.melt$Var2 == sprintf("Gap%d",j),]$value
#   t2 = traditional.tensor.in[,j,i]
#   pval = t.test(t1, t2, paired=T, conf.level=0.95)$p.value
#   gap.model.pval[i,j] = pval
#   if (pval < 0.05){
#     gap.model.pval.symbol[i,j] = "*"
#   }
# }
melted = traditional.tensor.in[,,i]
colnames(melted) = rown
rownames(melted) = coln
melted = melt(melted)
melted = cbind(rep(model.names[i+1], dim(melted)[1]), melted)
colnames(melted)[1] = "Model"
all.melt = rbind(all.melt, melted)
}
all.melt
ggplot(all.melt, aes(x=Var2, y=value, fill = Model)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = 21)
ggplot(all.melt, aes(x=Var2, y=value, fill = Model)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = 21)
ggplot(all.melt, aes(x=Var2, y=value, fill = Model)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = 21) +
theme_gray() +
labs(title = my.title, x = "", y = my.ylabel) +
theme(axis.text.x = element_text(size=12),
plot.title = element_text(size=14, face="bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="bottom"
) +
guides(fill=guide_legend(nrow=2,byrow=TRUE))
p <- ggplot(all.melt, aes(x=Var2, y=value, fill = Model)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = 21) +
theme_gray() +
labs(title = my.title, x = "", y = my.ylabel) +
theme(axis.text.x = element_text(size=12),
plot.title = element_text(size=14, face="bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="bottom"
) +
guides(fill=guide_legend(nrow=2,byrow=TRUE))
# scale_fill_brewer(palette="RdYlBu") +
# annotate("text", color = "black", x = 1:dim(lstm.mat.in)[2], y = apply(lstm.mat.in, 2, max),
#          label = "*")
p
modelcompareplot_with_trad <- function(lstm.mat.in, traditional.tensor.in, model.names, my.title, my.ylabel){
mat.melt = melt(lstm.mat.in)
all.melt = cbind(rep("LSTM", dim(mat.melt)[1]), mat.melt)
colnames(all.melt)[1] = "Model"
# construct gap - model matrix contains t-test (paired) p-value
# gap.model.pval = data.frame(matrix(NA, nrow = dim(traditional.tensor.in)[3], ncol = dim(lstm.mat.in)[2]))
# gap.model.pval.symbol = data.frame(matrix(" ", nrow = dim(traditional.tensor.in)[3], ncol = dim(lstm.mat.in)[2]))
for (i in 1:dim(traditional.tensor.in)[3]){
# for (j in 1:dim(lstm.mat.in)[2]){#Gaps
#   t1 = mat.melt[mat.melt$Var2 == sprintf("Gap%d",j),]$value
#   t2 = traditional.tensor.in[,j,i]
#   pval = t.test(t1, t2, paired=T, conf.level=0.95)$p.value
#   gap.model.pval[i,j] = pval
#   if (pval < 0.05){
#     gap.model.pval.symbol[i,j] = "*"
#   }
# }
melted = traditional.tensor.in[,,i]
colnames(melted) = rown
rownames(melted) = coln
melted = melt(melted)
melted = cbind(rep(model.names[i+1], dim(melted)[1]), melted)
colnames(melted)[1] = "Model"
all.melt = rbind(all.melt, melted)
}
p <- ggplot(all.melt, aes(x=Var2, y=value, fill = Model)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = 21) +
theme_gray() +
labs(title = my.title, x = "", y = my.ylabel) +
theme(axis.text.x = element_text(size=12),
plot.title = element_text(size=14, face="bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="bottom"
) +
guides(fill=guide_legend(nrow=2,byrow=TRUE))
# scale_fill_brewer(palette="RdYlBu") +
# annotate("text", color = "black", x = 1:dim(lstm.mat.in)[2], y = apply(lstm.mat.in, 2, max),
#          label = "*")
return(p)
}
print(result_folders)
model.names = c("LSTM", "Logistic Regression (L1)", "Logistic Regression (L2)")
p31 <- modelcompareplot_with_trad(t(MIMIC.auc_mat), MIMIC.trad.auc_mat, model.names,
"Model Performance (AUC) with Different Gap Hours (MIMIC Test Set)", "AUC")
p31
