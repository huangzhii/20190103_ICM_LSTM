MIMIC.trad.auc_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
MIMIC.trad.f1_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
MIMIC.trad.P_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
MIMIC.trad.R_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
EICU.trad.auc_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
EICU.trad.f1_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
EICU.trad.P_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
EICU.trad.R_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
i = 0
for (model in result_folders){
message(model)
i = i+1
j = 0
for (gap in dir(model)){
j = j+1
k = 0
for (fold in dir(paste(model, gap, sep = "/"))){
k = k+1
# message(fold)
tbl = read.csv(paste(model, gap, fold, 'MIMIC_AFPR_table.csv', sep = '/'), row.names = 1)
auc.train = tbl[1, 1]
auc.test = tbl[2, 1]
f1.train = tbl[3, 1]
f1.test = tbl[4, 1]
precision.test = tbl[5, 1]
recall.test = tbl[6, 1]
MIMIC.trad.auc_mat[k,j,i] = auc.test
MIMIC.trad.f1_mat[k,j,i] = f1.test
MIMIC.trad.P_mat[k,j,i] = precision.test
MIMIC.trad.R_mat[k,j,i] = recall.test
#EICU
lines <- readLines(paste(model, gap, fold, "mainlog.log", sep = "/"))
lines = lines[length(lines)]
EICU.res = as.numeric(unlist(regmatches(lines,gregexpr("[[:digit:]]+\\.*[[:digit:]]*",lines))))
EICU.trad.auc_mat[k,j,i] = EICU.res[1]
EICU.trad.f1_mat[k,j,i] = EICU.res[3]
EICU.trad.P_mat[k,j,i] = EICU.res[4]
EICU.trad.R_mat[k,j,i] = EICU.res[5]
}
}
}
modelcompareplot_with_trad <- function(lstm.mat.in, traditional.tensor.in, model.names, my.title, my.ylabel){
mat.melt = melt(lstm.mat.in)
all.melt = cbind(rep("LSTM", dim(mat.melt)[1]), mat.melt)
colnames(all.melt)[1] = "Model"
# construct gap - model matrix contains t-test (paired) p-value
# gap.model.pval = data.frame(matrix(NA, nrow = dim(traditional.tensor.in)[3], ncol = dim(lstm.mat.in)[2]))
# gap.model.pval.symbol = data.frame(matrix(" ", nrow = dim(traditional.tensor.in)[3], ncol = dim(lstm.mat.in)[2]))
for (i in 1:dim(traditional.tensor.in)[3]){
# for (j in 1:dim(lstm.mat.in)[2]){#Gaps
#   t1 = mat.melt[mat.melt$Var2 == sprintf("Gap%d",j),]$value
#   t2 = traditional.tensor.in[,j,i]
#   pval = t.test(t1, t2, paired=T, conf.level=0.95)$p.value
#   gap.model.pval[i,j] = pval
#   if (pval < 0.05){
#     gap.model.pval.symbol[i,j] = "*"
#   }
# }
melted = traditional.tensor.in[,,i]
colnames(melted) = rown
rownames(melted) = coln
melted = melt(melted)
melted = cbind(rep(model.names[i+1], dim(melted)[1]), melted)
colnames(melted)[1] = "Model"
all.melt = rbind(all.melt, melted)
}
p <- ggplot(all.melt, aes(x=Var2, y=value, fill = Model)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = NA) +
theme_gray() +
labs(title = my.title, x = "", y = my.ylabel) +
theme(axis.text.x = element_text(size=12),
plot.title = element_text(size=14, face="bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="bottom"
) +
guides(fill=guide_legend(nrow=2,byrow=TRUE))
# scale_fill_brewer(palette="RdYlBu") +
# annotate("text", color = "black", x = 1:dim(lstm.mat.in)[2], y = apply(lstm.mat.in, 2, max),
#          label = "*")
return(p)
}
print(result_folders)
model.names = c("LSTM", "Logistic Regression (L1)", "Logistic Regression (L2)",
"Neural Network", "Random Forest Classifier")
p31 <- modelcompareplot_with_trad(t(MIMIC.auc_mat), MIMIC.trad.auc_mat, model.names,
"Model Performance (AUC) with Different Gap Hours (MIMIC Test Set)", "AUC")
p32 <- modelcompareplot_with_trad(t(MIMIC.f1_mat), MIMIC.trad.f1_mat, model.names,
"Model Performance (F1 Score) with Different Gap Hours (MIMIC Test Set)", "F1 Score")
p33 <- modelcompareplot_with_trad(t(EICU.auc_mat), EICU.trad.auc_mat, model.names,
"Model Performance (AUC) with Different Gap Hours (EICU Test Set)", "AUC")
p34 <- modelcompareplot_with_trad(t(EICU.f1_mat), EICU.trad.f1_mat, model.names,
"Model Performance (F1) Score with Different Gap Hours (EICU Test Set)", "F1 Score")
Fig3 <- plot_grid(p31, p32, p33, p34, nrow=2, labels = c("A", "B", "C", "D"), align = "h")
Fig3
ggsave("../Figs and Tables/Fig3.png", plot = Fig3, width = 15, height = 10, units = "in", dpi=1200)
ggsave("../Figs and Tables/Fig3.png", plot = Fig3, width = 15, height = 10, units = "in", dpi=600)
# pairwise paired t-test
merge.f1.mat = apply(MIMIC.trad.f1_mat, 3, function(x) unlist(x))
merge.f1.mat = cbind(unlist(data.frame(t(MIMIC.f1_mat))), merge.f1.mat)
colnames(merge.f1.mat) = model.names
res = ppttest(merge.f1.mat)
pw.pttest.t = res[[1]]
pw.pttest.pval = res[[2]]
table = NULL
table.colnames = NULL
for (i in 1:dim(pw.pttest.t)[2]){
table = cbind(table, cbind(pw.pttest.t[,i], pw.pttest.pval[,i]))
table.colnames = c(table.colnames, paste(colnames(pw.pttest.t)[i], "(t)"),
paste(colnames(pw.pttest.pval)[i], "(p)"))
}
colnames(table) = table.colnames
write.table(table, "../Figs and Tables/Model_comparison_ppttest (MIMIC F1 Test Set).csv", sep = ",", col.names = NA)
##################################################
#    LSTM_16_3 feature ranking
##################################################
setwd("/home/zhihuan/Documents/20181207_Hypoxemia/20190103_ICM_LSTM/Results")
gap = 6
feature_ranking_path = paste0("/home/zhihuan/Documents/20181207_Hypoxemia/20190103_ICM_LSTM/Results/LSTM_20190104/LSTM_32_1/",
"Gap_", gap, "/feature_ranking")
fr.auc = read.csv(paste(feature_ranking_path, "AUC.csv", sep = "/"), row.names = 1)
fr.f1 = read.csv(paste(feature_ranking_path, "F1.csv", sep = "/"), row.names = 1)
fr.precision = read.csv(paste(feature_ranking_path, "Precision.csv", sep = "/"), row.names = 1)
fr.recall = read.csv(paste(feature_ranking_path, "Recall.csv", sep = "/"), row.names = 1)
feature_ranking_boxplot <- function(mat, sortby, my.title = "Title", my.ylabel = "AUC"){
if (sortby == "median"){
sortindex = sort.int(apply(mat, 1, median), index.return = T, decreasing = F)$ix
}
if (sortby == "mean"){
sortindex = sort.int(apply(mat, 1, mean), index.return = T, decreasing = F)$ix
}
mat = mat[sortindex,]
mat.melt = melt(as.matrix(mat))
p <- ggplot(mat.melt, aes(x=Var1, y=value, fill = Var1)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = NA) +
theme_gray() +
labs(title = my.title, x = "", y = my.ylabel) +
theme(axis.text.x = element_text(size=12, angle = 45, hjust = 1),
plot.title = element_text(size=14, face="bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.margin = unit(c(0.5,0.5,1,1), "cm"),
legend.position="none"
) +
guides(fill=guide_legend(nrow=2,byrow=TRUE))
return(p)
}
p41 <- feature_ranking_boxplot(fr.auc[,1:5], "median", "Feature Importance (MIMIC Test Set) evaluated by AUC", "AUC")
p42 <- feature_ranking_boxplot(fr.auc[,6:10], "median", "Feature Importance (EICU Dataet) evaluated by AUC", "AUC")
p43 <- feature_ranking_boxplot(fr.f1[,1:5], "median", "Feature Importance (MIMIC Test Set) evaluated by F1 Score", "F1 Score")
p44 <- feature_ranking_boxplot(fr.f1[,6:10], "median", "Feature Importance (EICU Dataet) evaluated by F1 Score", "F1 Score")
Fig4 <- plot_grid(p41, p42, p43, p44, nrow=2, labels = c("A", "B", "C", "D"), align = "h")
Fig4
ggsave("Figs and Tables/Fig4.png", plot = Fig4, width = 15, height = 10, units = "in", dpi=600)
ggsave("Figs and Tables/Fig4_MIMIC_F1.png", plot = p43, width = 15, height = 10, units = "in", dpi=600)
setwd("/home/zhihuan/Documents/20181207_Hypoxemia/20190103_ICM_LSTM/Results/Traditional_20190104/")
result_folders = dir(".")
# result_folders = result_folders[!result_folders %in% c("AdaBoost", "GBC")] # exclude ensemble methods
# result_folders = grep("_", result_folders, value=TRUE)
rown = c("Gap1","Gap2","Gap3","Gap4","Gap5","Gap6")
coln = c("fold1","fold2","fold3","fold4","fold5")
MIMIC.trad.auc_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
MIMIC.trad.f1_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
MIMIC.trad.P_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
MIMIC.trad.R_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
EICU.trad.auc_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
EICU.trad.f1_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
EICU.trad.P_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
EICU.trad.R_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
i = 0
for (model in result_folders){
message(model)
i = i+1
j = 0
for (gap in dir(model)){
j = j+1
k = 0
for (fold in dir(paste(model, gap, sep = "/"))){
k = k+1
# message(fold)
tbl = read.csv(paste(model, gap, fold, 'MIMIC_AFPR_table.csv', sep = '/'), row.names = 1)
auc.train = tbl[1, 1]
auc.test = tbl[2, 1]
f1.train = tbl[3, 1]
f1.test = tbl[4, 1]
precision.test = tbl[5, 1]
recall.test = tbl[6, 1]
MIMIC.trad.auc_mat[k,j,i] = auc.test
MIMIC.trad.f1_mat[k,j,i] = f1.test
MIMIC.trad.P_mat[k,j,i] = precision.test
MIMIC.trad.R_mat[k,j,i] = recall.test
#EICU
lines <- readLines(paste(model, gap, fold, "mainlog.log", sep = "/"))
lines = lines[length(lines)]
EICU.res = as.numeric(unlist(regmatches(lines,gregexpr("[[:digit:]]+\\.*[[:digit:]]*",lines))))
EICU.trad.auc_mat[k,j,i] = EICU.res[1]
EICU.trad.f1_mat[k,j,i] = EICU.res[3]
EICU.trad.P_mat[k,j,i] = EICU.res[4]
EICU.trad.R_mat[k,j,i] = EICU.res[5]
}
}
}
modelcompareplot_with_trad <- function(lstm.mat.in, traditional.tensor.in, model.names, my.title, my.ylabel){
mat.melt = melt(lstm.mat.in)
all.melt = cbind(rep("LSTM", dim(mat.melt)[1]), mat.melt)
colnames(all.melt)[1] = "Model"
# construct gap - model matrix contains t-test (paired) p-value
# gap.model.pval = data.frame(matrix(NA, nrow = dim(traditional.tensor.in)[3], ncol = dim(lstm.mat.in)[2]))
# gap.model.pval.symbol = data.frame(matrix(" ", nrow = dim(traditional.tensor.in)[3], ncol = dim(lstm.mat.in)[2]))
for (i in 1:dim(traditional.tensor.in)[3]){
# for (j in 1:dim(lstm.mat.in)[2]){#Gaps
#   t1 = mat.melt[mat.melt$Var2 == sprintf("Gap%d",j),]$value
#   t2 = traditional.tensor.in[,j,i]
#   pval = t.test(t1, t2, paired=T, conf.level=0.95)$p.value
#   gap.model.pval[i,j] = pval
#   if (pval < 0.05){
#     gap.model.pval.symbol[i,j] = "*"
#   }
# }
melted = traditional.tensor.in[,,i]
colnames(melted) = rown
rownames(melted) = coln
melted = melt(melted)
melted = cbind(rep(model.names[i+1], dim(melted)[1]), melted)
colnames(melted)[1] = "Model"
all.melt = rbind(all.melt, melted)
}
p <- ggplot(all.melt, aes(x=Var2, y=value, fill = Model)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = NA) +
theme_gray() +
labs(title = my.title, x = "", y = my.ylabel) +
theme(axis.text.x = element_text(size=12),
plot.title = element_text(size=14, face="bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="bottom"
) +
guides(fill=guide_legend(nrow=2,byrow=TRUE))
# scale_fill_brewer(palette="RdYlBu") +
# annotate("text", color = "black", x = 1:dim(lstm.mat.in)[2], y = apply(lstm.mat.in, 2, max),
#          label = "*")
return(p)
}
print(result_folders)
model.names = c("LSTM", "Logistic Regression (L1)", "Logistic Regression (L2)",
"Neural Network", "Random Forest Classifier")
p31 <- modelcompareplot_with_trad(t(MIMIC.auc_mat), MIMIC.trad.auc_mat, model.names,
"Model Performance (AUC) with Different Gap Hours (MIMIC Test Set)", "AUC")
p32 <- modelcompareplot_with_trad(t(MIMIC.f1_mat), MIMIC.trad.f1_mat, model.names,
"Model Performance (F1 Score) with Different Gap Hours (MIMIC Test Set)", "F1 Score")
p33 <- modelcompareplot_with_trad(t(EICU.auc_mat), EICU.trad.auc_mat, model.names,
"Model Performance (AUC) with Different Gap Hours (EICU Test Set)", "AUC")
p34 <- modelcompareplot_with_trad(t(EICU.f1_mat), EICU.trad.f1_mat, model.names,
"Model Performance (F1) Score with Different Gap Hours (EICU Test Set)", "F1 Score")
Fig3 <- plot_grid(p31, p32, p33, p34, nrow=2, labels = c("A", "B", "C", "D"), align = "h")
Fig3
result_folders
model.names = c("LSTM", "Adaboost", "GBC","Logistic Regression (L1)", "Logistic Regression (L2)",
"Neural Network", "Random Forest Classifier")
p31 <- modelcompareplot_with_trad(t(MIMIC.auc_mat), MIMIC.trad.auc_mat, model.names,
"Model Performance (AUC) with Different Gap Hours (MIMIC Test Set)", "AUC")
p32 <- modelcompareplot_with_trad(t(MIMIC.f1_mat), MIMIC.trad.f1_mat, model.names,
"Model Performance (F1 Score) with Different Gap Hours (MIMIC Test Set)", "F1 Score")
p33 <- modelcompareplot_with_trad(t(EICU.auc_mat), EICU.trad.auc_mat, model.names,
"Model Performance (AUC) with Different Gap Hours (EICU Test Set)", "AUC")
p34 <- modelcompareplot_with_trad(t(EICU.f1_mat), EICU.trad.f1_mat, model.names,
"Model Performance (F1) Score with Different Gap Hours (EICU Test Set)", "F1 Score")
Fig3 <- plot_grid(p31, p32, p33, p34, nrow=2, labels = c("A", "B", "C", "D"), align = "h")
Fig3
library(ggplot2)
library(reshape2)
library(gridExtra)
library(cowplot)
library(reticulate)
source("/home/zhihuan/Documents/20181207_Hypoxemia/20190103_ICM_LSTM/utils.R")
########################################
#     LSTM architecture comparison
########################################
setwd("/home/zhihuan/Documents/20181207_Hypoxemia/20190103_ICM_LSTM/Results/LSTM_20190104")
result_folders = dir(".")
result_folders = grep("LSTM", result_folders, value=TRUE)
rown = c("Gap1","Gap2","Gap3","Gap4","Gap5","Gap6")
coln = c("fold1","fold2","fold3","fold4","fold5")
MIMIC.lstm.auc_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
MIMIC.lstm.f1_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
MIMIC.lstm.P_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
MIMIC.lstm.R_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
EICU.lstm.auc_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
EICU.lstm.f1_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
EICU.lstm.P_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
EICU.lstm.R_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
i = 0
for (model in result_folders){
message(model)
i = i+1
j = 0
gaps = grep("Gap", dir(model), value=TRUE)
for (gap in gaps){
j = j+1
k = 0
for (fold in dir(paste(model, gap, sep = "/"))){
k = k+1
# message(fold)
tbl = read.csv(paste(model, gap, fold, 'MIMIC_AFPR_table.csv', sep = '/'), row.names = 1)
auc.train = tbl[dim(tbl)[1], 1]
auc.test = tbl[dim(tbl)[1], 2]
f1.train = tbl[dim(tbl)[1], 3]
f1.test = tbl[dim(tbl)[1], 4]
precision.test = tbl[dim(tbl)[1], 5]
recall.test = tbl[dim(tbl)[1], 6]
MIMIC.lstm.auc_mat[k,j,i] = auc.test
MIMIC.lstm.f1_mat[k,j,i] = f1.test
MIMIC.lstm.P_mat[k,j,i] = precision.test
MIMIC.lstm.R_mat[k,j,i] = recall.test
#EICU
lines <- readLines(paste(model, gap, fold, "mainlog.log", sep = "/"))
lines = lines[length(lines)]
EICU.res = as.numeric(unlist(regmatches(lines,gregexpr("[[:digit:]]+\\.*[[:digit:]]*",lines))))
EICU.lstm.auc_mat[k,j,i] = EICU.res[1]
EICU.lstm.f1_mat[k,j,i] = EICU.res[3]
EICU.lstm.P_mat[k,j,i] = EICU.res[4]
EICU.lstm.R_mat[k,j,i] = EICU.res[5]
}
}
}
modelcompareplot <- function(tensor.in, my.title, my.ylabel){
m.melt = NULL
for (i in 1:length(result_folders)){
melted = tensor.in[,,i]
colnames(melted) = rown
rownames(melted) = coln
melted = melt(melted)
melted = cbind(rep(result_folders[i], dim(melted)[1]), melted)
colnames(melted)[1] = "Model"
m.melt = rbind(m.melt, melted)
}
# p <- ggplot(m.melt, aes(x=Var2, y=value, fill = Model)) +
#   geom_boxplot(width=0.6, color="black", size = 0.7, outlier.shape = 21)
p <- ggplot(m.melt, aes(x=Var2, y=value, fill = Model)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = 21) +
theme_gray() +
labs(title = my.title, x = "", y = my.ylabel) +
theme(axis.text.x = element_text(size=12),
plot.title = element_text(size=14, face="bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="bottom"
)
return(p)
}
p11 <- modelcompareplot(MIMIC.lstm.auc_mat, "LSTM Model with Different Architecture (MIMIC Test Set)", "AUC")
p12 <- modelcompareplot(MIMIC.lstm.f1_mat, "LSTM Model with Different Architecture (MIMIC Test Set)", "F1 Score")
# modelcompareplot(MIMIC.lstm.P_mat)
# modelcompareplot(MIMIC.lstm.R_mat)
p13 <- modelcompareplot(EICU.lstm.auc_mat, "LSTM Model with Different Architecture (EICU Test Set)", "AUC")
p14 <- modelcompareplot(EICU.lstm.f1_mat, "LSTM Model with Different Architecture (EICU Test Set)", "F1 Score")
# modelcompareplot(EICU.lstm.P_mat)
# modelcompareplot(EICU.lstm.R_mat)
gaps
model
gap
fold
i = 0
for (model in result_folders){
message(model)
i = i+1
j = 0
gaps = grep("Gap", dir(model), value=TRUE)
for (gap in gaps){
j = j+1
k = 0
folds = grep("run_", dir(paste(model, gap, sep = "/")), value=TRUE)
for (fold in folds){
k = k+1
# message(fold)
tbl = read.csv(paste(model, gap, fold, 'MIMIC_AFPR_table.csv', sep = '/'), row.names = 1)
auc.train = tbl[dim(tbl)[1], 1]
auc.test = tbl[dim(tbl)[1], 2]
f1.train = tbl[dim(tbl)[1], 3]
f1.test = tbl[dim(tbl)[1], 4]
precision.test = tbl[dim(tbl)[1], 5]
recall.test = tbl[dim(tbl)[1], 6]
MIMIC.lstm.auc_mat[k,j,i] = auc.test
MIMIC.lstm.f1_mat[k,j,i] = f1.test
MIMIC.lstm.P_mat[k,j,i] = precision.test
MIMIC.lstm.R_mat[k,j,i] = recall.test
#EICU
lines <- readLines(paste(model, gap, fold, "mainlog.log", sep = "/"))
lines = lines[length(lines)]
EICU.res = as.numeric(unlist(regmatches(lines,gregexpr("[[:digit:]]+\\.*[[:digit:]]*",lines))))
EICU.lstm.auc_mat[k,j,i] = EICU.res[1]
EICU.lstm.f1_mat[k,j,i] = EICU.res[3]
EICU.lstm.P_mat[k,j,i] = EICU.res[4]
EICU.lstm.R_mat[k,j,i] = EICU.res[5]
}
}
}
modelcompareplot <- function(tensor.in, my.title, my.ylabel){
m.melt = NULL
for (i in 1:length(result_folders)){
melted = tensor.in[,,i]
colnames(melted) = rown
rownames(melted) = coln
melted = melt(melted)
melted = cbind(rep(result_folders[i], dim(melted)[1]), melted)
colnames(melted)[1] = "Model"
m.melt = rbind(m.melt, melted)
}
# p <- ggplot(m.melt, aes(x=Var2, y=value, fill = Model)) +
#   geom_boxplot(width=0.6, color="black", size = 0.7, outlier.shape = 21)
p <- ggplot(m.melt, aes(x=Var2, y=value, fill = Model)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = 21) +
theme_gray() +
labs(title = my.title, x = "", y = my.ylabel) +
theme(axis.text.x = element_text(size=12),
plot.title = element_text(size=14, face="bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="bottom"
)
return(p)
}
p11 <- modelcompareplot(MIMIC.lstm.auc_mat, "LSTM Model with Different Architecture (MIMIC Test Set)", "AUC")
p12 <- modelcompareplot(MIMIC.lstm.f1_mat, "LSTM Model with Different Architecture (MIMIC Test Set)", "F1 Score")
# modelcompareplot(MIMIC.lstm.P_mat)
# modelcompareplot(MIMIC.lstm.R_mat)
p13 <- modelcompareplot(EICU.lstm.auc_mat, "LSTM Model with Different Architecture (EICU Test Set)", "AUC")
p14 <- modelcompareplot(EICU.lstm.f1_mat, "LSTM Model with Different Architecture (EICU Test Set)", "F1 Score")
# modelcompareplot(EICU.lstm.P_mat)
# modelcompareplot(EICU.lstm.R_mat)
Fig1 <- plot_grid(p11, p12, p13, p14, nrow=2, labels = c("A", "B", "C", "D"), align = "h")
Fig1
########################################
#     LSTM architecture comparison
########################################
setwd("/home/zhihuan/Documents/20181207_Hypoxemia/20190103_ICM_LSTM/Results/LSTM_20190104")
result_folders = dir(".")
result_folders = grep("LSTM", result_folders, value=TRUE)
rown = c("Gap1","Gap2","Gap3","Gap4","Gap5","Gap6")
coln = c("fold1","fold2","fold3","fold4","fold5")
MIMIC.lstm.auc_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
MIMIC.lstm.f1_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
MIMIC.lstm.P_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
MIMIC.lstm.R_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
EICU.lstm.auc_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
EICU.lstm.f1_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
EICU.lstm.P_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
EICU.lstm.R_mat = array(NA, c(length(coln), length(rown), length(result_folders)))
i = 0
for (model in result_folders){
message(model)
i = i+1
j = 0
gaps = grep("Gap", dir(model), value=TRUE)
for (gap in gaps){
j = j+1
k = 0
folds = grep("run_", dir(paste(model, gap, sep = "/")), value=TRUE)
for (fold in folds){
k = k+1
# message(fold)
tbl = read.csv(paste(model, gap, fold, 'MIMIC_AFPR_table.csv', sep = '/'), row.names = 1)
auc.train = tbl[dim(tbl)[1], 1]
auc.test = tbl[dim(tbl)[1], 2]
f1.train = tbl[dim(tbl)[1], 3]
f1.test = tbl[dim(tbl)[1], 4]
precision.test = tbl[dim(tbl)[1], 5]
recall.test = tbl[dim(tbl)[1], 6]
MIMIC.lstm.auc_mat[k,j,i] = auc.test
MIMIC.lstm.f1_mat[k,j,i] = f1.test
MIMIC.lstm.P_mat[k,j,i] = precision.test
MIMIC.lstm.R_mat[k,j,i] = recall.test
#EICU
lines <- readLines(paste(model, gap, fold, "mainlog.log", sep = "/"))
lines = lines[length(lines)]
EICU.res = as.numeric(unlist(regmatches(lines,gregexpr("[[:digit:]]+\\.*[[:digit:]]*",lines))))
EICU.lstm.auc_mat[k,j,i] = EICU.res[1]
EICU.lstm.f1_mat[k,j,i] = EICU.res[3]
EICU.lstm.P_mat[k,j,i] = EICU.res[4]
EICU.lstm.R_mat[k,j,i] = EICU.res[5]
}
}
}
modelcompareplot <- function(tensor.in, my.title, my.ylabel){
m.melt = NULL
for (i in 1:length(result_folders)){
melted = tensor.in[,,i]
colnames(melted) = rown
rownames(melted) = coln
melted = melt(melted)
melted = cbind(rep(result_folders[i], dim(melted)[1]), melted)
colnames(melted)[1] = "Model"
m.melt = rbind(m.melt, melted)
}
# p <- ggplot(m.melt, aes(x=Var2, y=value, fill = Model)) +
#   geom_boxplot(width=0.6, color="black", size = 0.7, outlier.shape = 21)
p <- ggplot(m.melt, aes(x=Var2, y=value, fill = Model)) +
geom_boxplot(width=0.6, color="black", size = 0.5, outlier.shape = 21) +
theme_gray() +
labs(title = my.title, x = "", y = my.ylabel) +
theme(axis.text.x = element_text(size=12),
plot.title = element_text(size=14, face="bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="bottom"
)
return(p)
}
p11 <- modelcompareplot(MIMIC.lstm.auc_mat, "LSTM Model with Different Architecture (MIMIC Test Set)", "AUC")
p12 <- modelcompareplot(MIMIC.lstm.f1_mat, "LSTM Model with Different Architecture (MIMIC Test Set)", "F1 Score")
# modelcompareplot(MIMIC.lstm.P_mat)
# modelcompareplot(MIMIC.lstm.R_mat)
p13 <- modelcompareplot(EICU.lstm.auc_mat, "LSTM Model with Different Architecture (EICU Test Set)", "AUC")
p14 <- modelcompareplot(EICU.lstm.f1_mat, "LSTM Model with Different Architecture (EICU Test Set)", "F1 Score")
# modelcompareplot(EICU.lstm.P_mat)
# modelcompareplot(EICU.lstm.R_mat)
Fig1 <- plot_grid(p11, p12, p13, p14, nrow=2, labels = c("A", "B", "C", "D"), align = "h")
Fig1
